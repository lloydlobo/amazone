import React, { useContext, useEffect, useState } from "react";
import Head from 'next/head'
import Link from "next/link";

import { signOut, useSession } from 'next-auth/react'
import Cookies from "js-cookie";
import 'react-toastify/dist/ReactToastify.css'
import { ToastContainer } from "react-toastify";

import { Menu } from '@headlessui/react'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import DropdownLink from "./DropdownLink";
import { Store } from "../utils/Store";
import MyToggle from "./Switch";
import MyCombobox from "./Combobox";

export default function Layout({ title, children }: { title: any, children: any }): JSX.Element {
    // Session managed in App.tsx & login.tsx.
    // status flag shows loading of session. instead of username.
    const { status, data: session } = useSession()

    const { state, dispatch } = useContext(Store as React.Context<any>)
    const { cart } = state

    // Maintains state in index.html and cart.html. 
    // Same state in both client and server.
    const [cartItemsCount, setcartItemsCount] = useState(0)

    // use effect is only rendered in the client side (header menu).
    useEffect(() => {
        // acuumulator and current quantity.
        const count = cart.cartItems.reduce((a: number, c: { quantity: number; }) => {
            return a + c.quantity;
        }, 0)

        // (value: React.SetStateAction<number>) => void
        setcartItemsCount(count)
    })


    // logoutClickHandler logs user out of session.
    //
    // PERF: For persistence of order history, consider disabling all except one below.
    const logoutClickHandler = () => {
        // Remove locally stored browser cookies with js-cookie.
        Cookies.remove('cart')
        // Reset cart on logout with useContext(Store) dispatch.
        dispatch({ type: 'CART_RESET' })
        // Signs the user out, by removing the session cookie.
        // Automatically adds the CSRF token to the request.
        signOut({ callbackUrl: '/login' })
    }

    return (
        <>
            <Head>
                <title>{title ? title + " - Amazone Next App" : "Amazone Next App"}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {/* Limit the number of toast displayed at the same time */}
            <ToastContainer position="bottom-center" limit={1} />

            <div className="flex flex-col justify-between min-h-screen">
                <header className="shadow-md">
                    <nav className=" container mx-auto z-50 flex h-12 justify-between  items-center px-4">
                        <Link href={"/"}>
                            <a className="logo text-lg font-bold hover:font-extrabold">amazone</a>
                        </Link>

                        <div className="nav-links flex items-center">
                            <MyCombobox />
                            <MyToggle />

                            {/* navlink Docs */}
                            <Link href={"/docs"}>
                                <a className="px-2">Docs</a>
                            </Link>
                            {/* navlink Cart */}
                            <Link href={"/cart"}>
                                <a className="px-2">
                                    Cart
                                    {/* Atleast one item in the cart.  */}
                                    {cartItemsCount > 0 && (
                                        <span
                                            className="ml-1 rounded-full bg-red-600 px-2 py-1 text-xs font-bold text-white" >
                                            {cartItemsCount} {/* cart.cartItems.length */}
                                        </span>
                                    )}
                                </a>
                            </Link>
                            {/* navlink Login */}
                            {/* useSession status & session. */}
                            {status === "loading" ? (
                                'Loading'
                                // if user exists in session
                            ) : session?.user ? (
                                <Menu as='div' className={"relative inline-block"}>
                                    <Menu.Button className={"text-indigo-600"}>
                                        {session.user.name}
                                    </Menu.Button>
                                    <Menu.Items className={"absolute right-0 w-56 origin-top-right bg-white shadow-lg"}>
                                        <Menu.Item>
                                            <DropdownLink
                                                className="dropdown-link"
                                                href={"/profile"}
                                            >
                                                <FontAwesomeIcon icon={"function"} />
                                                Profile
                                            </DropdownLink>
                                        </Menu.Item>

                                        <Menu.Item>
                                            <DropdownLink
                                                className="dropdown-link"
                                                href={"/order-history"}
                                            >
                                                <FontAwesomeIcon icon={"function"} />
                                                Order History
                                            </DropdownLink>
                                        </Menu.Item>

                                        <Menu.Item>
                                            <DropdownLink
                                                className="dropdown-link"
                                                href={"#"}
                                                onClick={logoutClickHandler}
                                            >
                                                <FontAwesomeIcon icon={"function"} />
                                                Logout
                                            </DropdownLink>
                                        </Menu.Item>
                                    </Menu.Items>
                                </Menu>
                            ) : (
                                <Link href={"/login"}>
                                    <a className="px-2">Login</a>
                                </Link>
                            )}
                        </div>
                    </nav>
                </header >

                <main className="container m-auto mt-4 px-4">
                    {children}
                </main>

                <footer className="container mx-auto flex h-10 justify-center items-center shadow-inner">
                    <p>Copyright &copy; Amazone</p>
                </footer>
            </div >

        </>
    );
};

// References:
//
// https://www.youtube.com/watch?v=ab0GWqgSABY
// [Part 5: Handle Add to Cart] https://www.youtube.com/watch?v=YeiqNF9fLPw 

